pipeline {
    agent {
        docker {
            image: 'maven:3.6.1-jdk-8-alpine'
            args '-v $HOME/.m2:/root/.m2'
        }
    }


    stages {
        stage('build') {
            steps {
                echo 'Compiling worker app'
                dir('worker'){
                    sh 'mvn compile'
                }
            }
        }
        stage('test') {
            steps {
                echo 'Running Unit Tests on worker app'
                dir('worker'){
                    sh 'mvn clean test'
                }
            }
        }
        stage('package') {
            when{
                branch 'master'
                chnageset "**/worker/**"
            }
            steps {
                echo 'Packageging worker app'
                dir('worker'){
                    sh 'mvn package -DskipTests'
                    archiveArtifacts artifacts: '**/target*.jar', fingerprint: true
                }
            }
        }
        stage('docker-package') {
            when{
                branch 'master'
                chnageset "**/worker/**"
            }
            steps {
                echo 'Packaging worker app with docker'
                sript{
                    docker.withRegistry('https://index.docker.io/v1', 'dockerlogin'){
                        def workerImage = docker.build("slobodaandrej/worker:v${env.BUILD_ID}", "worker")
                        workerImage.push()
                        workerImage.push("${env.BRANCH_NAME}")
                    }
                }
            }
        }
    }

    post {
        always{
            echo 'Pipeline for worker is complete..'
        }
    }
}
